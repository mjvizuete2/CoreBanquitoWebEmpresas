{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction LoginComponent_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_13_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email must be a valid email address\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtemplate(1, LoginComponent_div_13_div_1_Template, 2, 0, \"div\", 15);\n    i0.ɵɵtemplate(2, LoginComponent_div_13_div_2_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.email.errors.email);\n  }\n}\nfunction LoginComponent_div_18_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtemplate(1, LoginComponent_div_18_div_1_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.password.errors.required);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class LoginComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  get f() {\n    return this.loginForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.loginForm.value, null, 4));\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 21,\n    vars: 9,\n    consts: [[1, \"container\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-6\"], [1, \"card\", \"mt-5\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mt-3\"], [1, \"invalid-feedback\"], [4, \"ngIf\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h3\");\n        i0.ɵɵtext(6, \"Login\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\", 8);\n        i0.ɵɵtext(11, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 9);\n        i0.ɵɵtemplate(13, LoginComponent_div_13_Template, 3, 2, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 7)(15, \"label\", 11);\n        i0.ɵɵtext(16, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 12);\n        i0.ɵɵtemplate(18, LoginComponent_div_18_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 13);\n        i0.ɵɵtext(20, \"Login\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx.submitted && ctx.f.email.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.email.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.submitted && ctx.f.password.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.password.errors);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgIf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LoginComponent_div_13_div_1_Template","LoginComponent_div_13_div_2_Template","ɵɵadvance","ɵɵproperty","ctx_r0","f","email","errors","required","LoginComponent_div_18_div_1_Template","ctx_r1","password","LoginComponent","constructor","formBuilder","submitted","ngOnInit","loginForm","group","controls","onSubmit","invalid","alert","JSON","stringify","value","_","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_8_listener","ɵɵelement","LoginComponent_div_13_Template","LoginComponent_div_18_Template","ɵɵpureFunction1","_c0"],"sources":["C:\\Users\\majou\\OneDrive\\Documents\\Arqui\\CoreBanquitoWebEmpresas\\webEmpresas\\src\\app\\pantallas\\login\\login.component.ts","C:\\Users\\majou\\OneDrive\\Documents\\Arqui\\CoreBanquitoWebEmpresas\\webEmpresas\\src\\app\\pantallas\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  submitted = false;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  get f() { return this.loginForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.loginForm.value, null, 4));\n  }\n}\n","<div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-6\">\n        <div class=\"card mt-5\">\n          <div class=\"card-header\">\n            <h3>Login</h3>\n          </div>\n          <div class=\"card-body\">\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n              <div class=\"form-group\">\n                <label for=\"email\">Email</label>\n                <input type=\"email\" id=\"email\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{'is-invalid': submitted && f.email.errors}\" />\n                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                  <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{'is-invalid': submitted && f.password.errors}\" />\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                </div>\n              </div>\n              <button type=\"submit\" class=\"btn btn-primary btn-block mt-3\">Login</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}